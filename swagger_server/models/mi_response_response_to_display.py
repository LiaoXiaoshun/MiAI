# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.mi_response_response_to_display_ui_template import MiResponseResponseToDisplayUiTemplate  # noqa: F401,E501
from swagger_server.models.mi_response_response_to_display_widget import MiResponseResponseToDisplayWidget  # noqa: F401,E501
from swagger_server import util


class MiResponseResponseToDisplay(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, type: int=None, url: str=None, text: str=None, ui_template: MiResponseResponseToDisplayUiTemplate=None, widget: MiResponseResponseToDisplayWidget=None):  # noqa: E501
        """MiResponseResponseToDisplay - a model defined in Swagger

        :param type: The type of this MiResponseResponseToDisplay.  # noqa: E501
        :type type: int
        :param url: The url of this MiResponseResponseToDisplay.  # noqa: E501
        :type url: str
        :param text: The text of this MiResponseResponseToDisplay.  # noqa: E501
        :type text: str
        :param ui_template: The ui_template of this MiResponseResponseToDisplay.  # noqa: E501
        :type ui_template: MiResponseResponseToDisplayUiTemplate
        :param widget: The widget of this MiResponseResponseToDisplay.  # noqa: E501
        :type widget: MiResponseResponseToDisplayWidget
        """
        self.swagger_types = {
            'type': int,
            'url': str,
            'text': str,
            'ui_template': MiResponseResponseToDisplayUiTemplate,
            'widget': MiResponseResponseToDisplayWidget
        }

        self.attribute_map = {
            'type': 'type',
            'url': 'url',
            'text': 'text',
            'ui_template': 'ui_template',
            'widget': 'widget'
        }

        self._type = type
        self._url = url
        self._text = text
        self._ui_template = ui_template
        self._widget = widget

    @classmethod
    def from_dict(cls, dikt) -> 'MiResponseResponseToDisplay':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MiResponse_response_to_display of this MiResponseResponseToDisplay.  # noqa: E501
        :rtype: MiResponseResponseToDisplay
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> int:
        """Gets the type of this MiResponseResponseToDisplay.


        :return: The type of this MiResponseResponseToDisplay.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type: int):
        """Sets the type of this MiResponseResponseToDisplay.


        :param type: The type of this MiResponseResponseToDisplay.
        :type type: int
        """

        self._type = type

    @property
    def url(self) -> str:
        """Gets the url of this MiResponseResponseToDisplay.


        :return: The url of this MiResponseResponseToDisplay.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this MiResponseResponseToDisplay.


        :param url: The url of this MiResponseResponseToDisplay.
        :type url: str
        """

        self._url = url

    @property
    def text(self) -> str:
        """Gets the text of this MiResponseResponseToDisplay.


        :return: The text of this MiResponseResponseToDisplay.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this MiResponseResponseToDisplay.


        :param text: The text of this MiResponseResponseToDisplay.
        :type text: str
        """

        self._text = text

    @property
    def ui_template(self) -> MiResponseResponseToDisplayUiTemplate:
        """Gets the ui_template of this MiResponseResponseToDisplay.


        :return: The ui_template of this MiResponseResponseToDisplay.
        :rtype: MiResponseResponseToDisplayUiTemplate
        """
        return self._ui_template

    @ui_template.setter
    def ui_template(self, ui_template: MiResponseResponseToDisplayUiTemplate):
        """Sets the ui_template of this MiResponseResponseToDisplay.


        :param ui_template: The ui_template of this MiResponseResponseToDisplay.
        :type ui_template: MiResponseResponseToDisplayUiTemplate
        """

        self._ui_template = ui_template

    @property
    def widget(self) -> MiResponseResponseToDisplayWidget:
        """Gets the widget of this MiResponseResponseToDisplay.


        :return: The widget of this MiResponseResponseToDisplay.
        :rtype: MiResponseResponseToDisplayWidget
        """
        return self._widget

    @widget.setter
    def widget(self, widget: MiResponseResponseToDisplayWidget):
        """Sets the widget of this MiResponseResponseToDisplay.


        :param widget: The widget of this MiResponseResponseToDisplay.
        :type widget: MiResponseResponseToDisplayWidget
        """

        self._widget = widget
