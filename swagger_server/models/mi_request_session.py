# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.mi_request_session_application import MiRequestSessionApplication  # noqa: F401,E501
from swagger_server.models.mi_request_session_user import MiRequestSessionUser  # noqa: F401,E501
from swagger_server import util


class MiRequestSession(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, session_id: str=None, application: MiRequestSessionApplication=None, attributes: object=None, user: MiRequestSessionUser=None):  # noqa: E501
        """MiRequestSession - a model defined in Swagger

        :param session_id: The session_id of this MiRequestSession.  # noqa: E501
        :type session_id: str
        :param application: The application of this MiRequestSession.  # noqa: E501
        :type application: MiRequestSessionApplication
        :param attributes: The attributes of this MiRequestSession.  # noqa: E501
        :type attributes: object
        :param user: The user of this MiRequestSession.  # noqa: E501
        :type user: MiRequestSessionUser
        """
        self.swagger_types = {
            'session_id': str,
            'application': MiRequestSessionApplication,
            'attributes': object,
            'user': MiRequestSessionUser
        }

        self.attribute_map = {
            'session_id': 'session_id',
            'application': 'application',
            'attributes': 'attributes',
            'user': 'user'
        }

        self._session_id = session_id
        self._application = application
        self._attributes = attributes
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'MiRequestSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MiRequest_session of this MiRequestSession.  # noqa: E501
        :rtype: MiRequestSession
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_id(self) -> str:
        """Gets the session_id of this MiRequestSession.


        :return: The session_id of this MiRequestSession.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this MiRequestSession.


        :param session_id: The session_id of this MiRequestSession.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def application(self) -> MiRequestSessionApplication:
        """Gets the application of this MiRequestSession.


        :return: The application of this MiRequestSession.
        :rtype: MiRequestSessionApplication
        """
        return self._application

    @application.setter
    def application(self, application: MiRequestSessionApplication):
        """Sets the application of this MiRequestSession.


        :param application: The application of this MiRequestSession.
        :type application: MiRequestSessionApplication
        """

        self._application = application

    @property
    def attributes(self) -> object:
        """Gets the attributes of this MiRequestSession.


        :return: The attributes of this MiRequestSession.
        :rtype: object
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: object):
        """Sets the attributes of this MiRequestSession.


        :param attributes: The attributes of this MiRequestSession.
        :type attributes: object
        """

        self._attributes = attributes

    @property
    def user(self) -> MiRequestSessionUser:
        """Gets the user of this MiRequestSession.


        :return: The user of this MiRequestSession.
        :rtype: MiRequestSessionUser
        """
        return self._user

    @user.setter
    def user(self, user: MiRequestSessionUser):
        """Sets the user of this MiRequestSession.


        :param user: The user of this MiRequestSession.
        :type user: MiRequestSessionUser
        """

        self._user = user
