# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.mi_response_response_directives_audio_item import MiResponseResponseDirectivesAudioItem  # noqa: F401,E501
from swagger_server.models.mi_response_response_directives_tts_item import MiResponseResponseDirectivesTtsItem  # noqa: F401,E501
from swagger_server import util


class MiResponseResponseDirectives(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, audio_item: MiResponseResponseDirectivesAudioItem=None, tts_item: MiResponseResponseDirectivesTtsItem=None):  # noqa: E501
        """MiResponseResponseDirectives - a model defined in Swagger

        :param type: The type of this MiResponseResponseDirectives.  # noqa: E501
        :type type: str
        :param audio_item: The audio_item of this MiResponseResponseDirectives.  # noqa: E501
        :type audio_item: MiResponseResponseDirectivesAudioItem
        :param tts_item: The tts_item of this MiResponseResponseDirectives.  # noqa: E501
        :type tts_item: MiResponseResponseDirectivesTtsItem
        """
        self.swagger_types = {
            'type': str,
            'audio_item': MiResponseResponseDirectivesAudioItem,
            'tts_item': MiResponseResponseDirectivesTtsItem
        }

        self.attribute_map = {
            'type': 'type',
            'audio_item': 'audio_item',
            'tts_item': 'tts_item'
        }

        self._type = type
        self._audio_item = audio_item
        self._tts_item = tts_item

    @classmethod
    def from_dict(cls, dikt) -> 'MiResponseResponseDirectives':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MiResponse_response_directives of this MiResponseResponseDirectives.  # noqa: E501
        :rtype: MiResponseResponseDirectives
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this MiResponseResponseDirectives.


        :return: The type of this MiResponseResponseDirectives.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this MiResponseResponseDirectives.


        :param type: The type of this MiResponseResponseDirectives.
        :type type: str
        """

        self._type = type

    @property
    def audio_item(self) -> MiResponseResponseDirectivesAudioItem:
        """Gets the audio_item of this MiResponseResponseDirectives.


        :return: The audio_item of this MiResponseResponseDirectives.
        :rtype: MiResponseResponseDirectivesAudioItem
        """
        return self._audio_item

    @audio_item.setter
    def audio_item(self, audio_item: MiResponseResponseDirectivesAudioItem):
        """Sets the audio_item of this MiResponseResponseDirectives.


        :param audio_item: The audio_item of this MiResponseResponseDirectives.
        :type audio_item: MiResponseResponseDirectivesAudioItem
        """

        self._audio_item = audio_item

    @property
    def tts_item(self) -> MiResponseResponseDirectivesTtsItem:
        """Gets the tts_item of this MiResponseResponseDirectives.


        :return: The tts_item of this MiResponseResponseDirectives.
        :rtype: MiResponseResponseDirectivesTtsItem
        """
        return self._tts_item

    @tts_item.setter
    def tts_item(self, tts_item: MiResponseResponseDirectivesTtsItem):
        """Sets the tts_item of this MiResponseResponseDirectives.


        :param tts_item: The tts_item of this MiResponseResponseDirectives.
        :type tts_item: MiResponseResponseDirectivesTtsItem
        """

        self._tts_item = tts_item
