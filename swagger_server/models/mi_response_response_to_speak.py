# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MiResponseResponseToSpeak(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, type: int=None, text: str=None):  # noqa: E501
        """MiResponseResponseToSpeak - a model defined in Swagger

        :param type: The type of this MiResponseResponseToSpeak.  # noqa: E501
        :type type: int
        :param text: The text of this MiResponseResponseToSpeak.  # noqa: E501
        :type text: str
        """
        self.swagger_types = {
            'type': int,
            'text': str
        }

        self.attribute_map = {
            'type': 'type',
            'text': 'text'
        }

        self._type = type
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'MiResponseResponseToSpeak':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MiResponse_response_to_speak of this MiResponseResponseToSpeak.  # noqa: E501
        :rtype: MiResponseResponseToSpeak
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> int:
        """Gets the type of this MiResponseResponseToSpeak.


        :return: The type of this MiResponseResponseToSpeak.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type: int):
        """Sets the type of this MiResponseResponseToSpeak.


        :param type: The type of this MiResponseResponseToSpeak.
        :type type: int
        """

        self._type = type

    @property
    def text(self) -> str:
        """Gets the text of this MiResponseResponseToSpeak.


        :return: The text of this MiResponseResponseToSpeak.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this MiResponseResponseToSpeak.


        :param text: The text of this MiResponseResponseToSpeak.
        :type text: str
        """

        self._text = text
